local NotifyModule = {}

local TweenService = game:GetService("TweenService")

-- Функция создания GUI
function NotifyModule:CreateGui()
    local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    if PlayerGui:FindFirstChild("UniversalNotifier") then
        return -- Если уже создан, второй раз не создаём
    end

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "UniversalNotifier"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = PlayerGui

    local Handle = Instance.new("Frame")
    Handle.Name = "Handle"
    Handle.BorderSizePixel = 0
    Handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Handle.AnchorPoint = Vector2.new(1, 0.5)
    Handle.Size = UDim2.new(0.25, 0, 0.95, 0)
    Handle.Position = UDim2.new(1, 0, 0.5, 0)
    Handle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Handle.BackgroundTransparency = 1
    Handle.Parent = ScreenGui

    local Layout = Instance.new("UIListLayout")
    Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    Layout.Padding = UDim.new(0.03, 0)
    Layout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    Layout.SortOrder = Enum.SortOrder.LayoutOrder
    Layout.Parent = Handle

    local Anims = Instance.new("Folder")
    Anims.Name = "Anims"
    Anims.Parent = ScreenGui

    local NotifyFrame = Instance.new("Frame")
    NotifyFrame.Name = "Notify"
    NotifyFrame.Visible = false
    NotifyFrame.BorderSizePixel = 0
    NotifyFrame.BackgroundColor3 = Color3.fromRGB(11, 11, 11)
    NotifyFrame.Size = UDim2.new(0.8, 0, 0.12, 0)
    NotifyFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    NotifyFrame.BackgroundTransparency = 0.2
    NotifyFrame.Parent = Anims

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = NotifyFrame

    local UpText = Instance.new("TextLabel")
    UpText.Name = "UpText"
    UpText.TextWrapped = true
    UpText.BorderSizePixel = 0
    UpText.TextScaled = true
    UpText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    UpText.FontFace = Font.new("rbxassetid://12187371324", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    UpText.TextColor3 = Color3.fromRGB(255, 255, 255)
    UpText.BackgroundTransparency = 1
    UpText.AnchorPoint = Vector2.new(0.5, 0)
    UpText.Size = UDim2.new(1, 0, 0.3, 0)
    UpText.Position = UDim2.new(0.5, 0, 0.04, 0)
    UpText.Parent = NotifyFrame

    local UpTextSizeConstraint = Instance.new("UITextSizeConstraint")
    UpTextSizeConstraint.MaxTextSize = 30
    UpTextSizeConstraint.Parent = UpText

    local Neo = Instance.new("ImageLabel")
    Neo.Name = "Neo"
    Neo.ZIndex = -33
    Neo.BorderSizePixel = 0
    Neo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Neo.ImageColor3 = Color3.fromRGB(51, 51, 51)
    Neo.AnchorPoint = Vector2.new(0.5, 0.5)
    Neo.Image = "http://www.roblox.com/asset/?id=107797957062928"
    Neo.Size = UDim2.new(1.2172, 0, 1.5737, 0)
    Neo.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Neo.BackgroundTransparency = 1
    Neo.Position = UDim2.new(0.5, 0, 0.5, 0)
    Neo.Parent = NotifyFrame

    local Bottom = Instance.new("TextLabel")
    Bottom.Name = "Bottom"
    Bottom.TextWrapped = true
    Bottom.BorderSizePixel = 0
    Bottom.TextScaled = true
    Bottom.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Bottom.FontFace = Font.new("rbxassetid://12187371324", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
    Bottom.TextColor3 = Color3.fromRGB(255, 255, 255)
    Bottom.BackgroundTransparency = 1
    Bottom.AnchorPoint = Vector2.new(0.5, 0.5)
    Bottom.Size = UDim2.new(1, 0, 0.66, 0)
    Bottom.Position = UDim2.new(0.5, 0, 0.67, 0)
    Bottom.Parent = NotifyFrame

    local BottomTextSizeConstraint = Instance.new("UITextSizeConstraint")
    BottomTextSizeConstraint.MaxTextSize = 25
    BottomTextSizeConstraint.Parent = Bottom

    local UIScale = Instance.new("UIScale")
    UIScale.Scale = 0
    UIScale.Parent = NotifyFrame
end

function NotifyModule:Scale(way, speed, easingStyle, easingDirection, repeatCount, isReversed, value)
    TweenService:Create(
        way.UIScale,
        TweenInfo.new(speed, Enum.EasingStyle[easingStyle], Enum.EasingDirection[easingDirection], repeatCount, isReversed),
        {Scale = value}
    ):Play()
end

function NotifyModule:Notify(AppearTime, UpText, InfoText)
    -- Сначала создаём GUI если его нет
    self:CreateGui()

    local PlayerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    local Handle = PlayerGui.UniversalNotifier:WaitForChild("Handle")
    local Template = PlayerGui.UniversalNotifier.Anims.Notify

    local Clone = Template:Clone()
    Clone.Parent = Handle
    Clone.Visible = true
    Clone.UpText.Text = UpText
    Clone.Bottom.Text = InfoText

    self:Scale(Clone, 0.3, "Linear", "In", 0, false, 1)
    task.wait(AppearTime)
    self:Scale(Clone, 0.3, "Linear", "Out", 0, false, 0)
    task.wait(0.3)
    Clone:Destroy()
end

return NotifyModule
